% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downscale.predict.R
\name{downscale.predict}
\alias{downscale.predict}
\title{Downscale climate data for a given statistical model.}
\usage{
downscale.predict(newdata, model)
}
\arguments{
\item{newdata}{The grid data. It should be an object as returned by  \code{\link[downscaleR]{prepare_newdata}}.}

\item{model}{An object containing the statistical model as returned from  \code{\link[downscaleR]{downscale.train}}.}
}
\value{
An object with the predictions.
}
\description{
Downscale data to local scales by statistical models previously obtained by \code{\link[downscaleR]{downscale.train}}.
}
\details{
The function can downscale in both global and local mode, though not simultaneously.
}
\examples{
# Loading predictors
x <- makeMultiGrid(NCEP_Iberia_hus850, NCEP_Iberia_psl, NCEP_Iberia_ta850)
x <- subsetGrid(x, years = 1985:1995)
# Loading predictands
y <- VALUE_Iberia_pr
# Prepare predictors and prepare new data
xtrain <- prepare_predictors(x = x, y = y)
xtest <- prepare_newdata(newdata = x, predictor = xtrain)
# Downscaling a generalized linear model. In particular a logistic regression.
# model <- downscale.train(ybin, xtrain, method = "GLM" ,family = binomial(link = "logit"))
# str(model)
# pred <- downscale.predict(xtest, model)
# str(pred)
# Downscaling a linear model..
model <- downscale.train(xtrain$y, xtrain, method = "MLR", fitting = 'MP')
str(model)
pred <- downscale.predict(xtest, model)
str(pred)
# Downscaling a non-linear model via a regularized L2 Extreme learning Machine..
model <- downscale.train(xtrain$y, xtrain, method = "ELM", fitting = 'MP+L2')
str(model)
pred <- downscale.predict(xtest, model)
str(pred)
# Downscaling a non-linear model via Neural Networks..
model <- downscale.train(xtrain$y, xtrain, method = "NN", learningrate = 0.1, numepochs = 10, hidden = 5, output = 'linear') 
str(model)
pred <- downscale.predict(xtest, model)
str(pred)
# Downscaling a local model with the closest 4 grid points.
xtrain <- prepare_predictors(x = x,y = y,local.predictors = list(neigh.vars = "shum850",n.neighs = 4))
xtest <- prepare_newdata(newdata = x, predictor = xtrain)
model <- downscale.train(xtrain$y, xtrain, method = "MLR", fitting = 'MP')
str(model)
pred <- downscale.predict(xtest, model)
str(pred)
# Donwscaling with Principal Components (PCs)
xtrain <- prepare_predictors(x = x,y = y, PCA = list(v.exp = 0.9))
xtest <- prepare_newdata(newdata = x, predictor = xtrain)
model <- downscale.train(xtrain$y, xtrain, method = "ELM" ,fitting = 'MP')
str(model)
pred <- downscale.predict(xtest, model)
str(pred)
}
\author{
J. Bano-Medina
}
