% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downscale_toolbox.R
\name{downscale.train}
\alias{downscale.train}
\title{Downscale climate data.}
\usage{
downscale.train(predictands, predictors, method, ...)
}
\arguments{
\item{predictands}{The observations dataset. It should be an object as returned by \pkg{loadeR}.}

\item{predictors}{The input grid as returned by \code{\link{prepare_predictors}}.}

\item{method}{Type of transer function. Options are: GLM, MLR, ELM and NN. The default is MLR.}

\item{...}{Optional parameters required for the specific method chosen. 
GLM: Uses the glm base function. Parameters: family. 
MLR: Uses wether an internal function or the lm base function. Parameters: fitting = c("LS","MP","MP+L2"). You can fit the model via the Least Squares (LR) lm R function, or via the Moore-Penrose (MP) inverse, or via the Moore-Penrose regularized by a L2 penalty (MP+L2)
ELM: Uses an internal function. Parameters: fitting = c("MP","MP+L2"), neurons = 100, Act.F = 'sig', area.region = NULL, area.module = NULL. 
The number of hidden neurons is selected in the parameter "neurons" along with its activation function in "Act.F.
For a modular ELM, called Receptive Fields ELM (RF-ELM), special parameters are needed: area.region and area.module. 
The area.region parameter means the area covered by the grid (i.e, for the following gridpoints: (46,2), (48,2), (50,2), (46,4), (48,4), (50,4); your area is c(3,2)). 
The area.module parameter means the size of the square mask (i.e., if area.module = 2, this means that a hidden neuron will be fed by all variables included in a random selected square of 2 consecutive gridpoints in latitude and 2 consecutive points in longitude)  
NN:  Uses the nn.train function of the deepnet library. Parameters: initW = NULL, initB = NULL, hidden = c(10), activationfun = "sigm", learningrate = 0.8, momentum = 0.5, learningrate_scale = 1, output = "sigm", numepochs = 3, batchsize = 100, hidden_dropout = 0, visible_dropout = 0}
}
\value{
A list of objects that contains the model, the prediction on the train dataset, the predictors and predictands used.
}
\description{
Downscale data to local scales by statistical methods: generalized linear models (GLM), multiple linear regression (MLR), Extreme Learning Machine (ELM) and Neural Networks (NN).
}
\details{
The function can downscale in both global and local mode, though not simultaneously. 
If there is perfect collinearity among predictors, then the matrix will not be invertible and the downscaling will fail.


Appends the attribute \code{subset = "convert2bin"} in the \code{Variable} element.
}
\examples{
data("VALUE_Iberia_tp")
# Take a look at the data:
head(VALUE_Iberia_tp$Data)
# Convert to complete binary variable:
bin.total <- convert2bin(VALUE_Iberia_tp,threshold = 1)
head(bin.total$Data)
# Convert to partial binary variable:
bin.partial <- convert2bin(VALUE_Iberia_tp,threshold = 1, partial = TRUE)
head(bin.partial$Data)
}
\author{
J. Bano-Medina
}
